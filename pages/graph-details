<div class="mathnode-panel label noselect">Project Properties</div>
<div class="mathnode-panel row">
    <a onclick="$this.focusOn('eval-precision');" class="mathnode-panel line-label row-left noselect" title="Set number of significant figures for evaluation nodes (disabled when 0)">Significant Figures</a>
    <input id="eval-precision" class="mathnode-panel numeric row-right" onchange="$this.updatePrecision(this);" value="0"></input>
</div>
<div class="mathnode-panel vertical-divider"></div>

<script>
    $this.focusOn = (element) => {
        const el = document.getElementById(element);
        if (el) el.focus();
    }

    $this.updatePrecision = (element) => {
        MathNode.Interface.tabs.active.values.precision = element.value;
        // @TODO: Make all nodes recalculate
    }

    function init() {
        const numericInputs = Array.from(document.getElementsByClassName('mathnode-panel numeric'));

        // Assign a filtering function to all numeric inputs to make sure they only contain allowed values
        numericInputs.map(input => {
            filter(input, (value) => /^\d*\.?\d*$/.test(value));
        });

        // Assign value to precision input
        const precision = document.getElementById('eval-precision');

        if (precision) {
            precision.textValue = precision.value = MathNode.Interface.tabs.active.values.precision;
        }
    }

    // Restricts input for the given input element by a function
    function filter(textbox, func) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].map(ev => {
            textbox.addEventListener(ev, (e) => {
                textbox.value = textbox.value.replace(/,/, '.');
                if (func(textbox.value)) {
                    textbox.oldValue = textbox.value;
                    textbox.oldSelectionStart = textbox.selectionStart;
                    textbox.oldSelectionEnd = textbox.selectionEnd;
                } else if (textbox.hasOwnProperty("oldValue")) {
                    textbox.value = textbox.oldValue;
                    textbox.setSelectionRange(textbox.oldSelectionStart, textbox.oldSelectionEnd);
                }
            });
        });
    }

    init();
</script>
